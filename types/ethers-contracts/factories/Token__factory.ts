/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260126002553480156200001657600080fd5b5060405162000a3f38038062000a3f8339810160408190526200003991620001f9565b82516200004e906000906020860190620000a0565b50815162000064906001906020850190620000a0565b506002546200007590600a620002b2565b6200008190826200037d565b6003819055336000908152600460205260409020555062000408915050565b828054620000ae906200039f565b90600052602060002090601f016020900481019282620000d257600085556200011d565b82601f10620000ed57805160ff19168380011785556200011d565b828001600101855582156200011d579182015b828111156200011d57825182559160200191906001019062000100565b506200012b9291506200012f565b5090565b5b808211156200012b576000815560010162000130565b600082601f83011262000157578081fd5b81516001600160401b0380821115620001745762000174620003f2565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f620003f2565b81604052838152602092508683858801011115620001bb578485fd5b8491505b83821015620001de5785820183015181830184015290820190620001bf565b83821115620001ef57848385830101525b9695505050505050565b6000806000606084860312156200020e578283fd5b83516001600160401b038082111562000225578485fd5b620002338783880162000146565b9450602086015191508082111562000249578384fd5b50620002588682870162000146565b925050604084015190509250925092565b600181815b80851115620002aa5781600019048211156200028e576200028e620003dc565b808516156200029c57918102915b93841c93908002906200026e565b509250929050565b6000620002c08383620002c7565b9392505050565b600082620002d85750600162000377565b81620002e75750600062000377565b81600181146200030057600281146200030b576200032b565b600191505062000377565b60ff8411156200031f576200031f620003dc565b50506001821b62000377565b5060208310610133831016604e8410600b841016171562000350575081810a62000377565b6200035c838362000269565b8060001904821115620003735762000373620003dc565b0290505b92915050565b60008160001904831182151516156200039a576200039a620003dc565b500290565b600181811c90821680620003b457607f821691505b60208210811415620003d657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61062780620004186000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b411461013c578063a9059cbb14610144578063dd62ed3e1461015757600080fd5b8063313ce5671461011357806370a082311461011c57600080fd5b806306fdde03146100a8578063095ea7b3146100c657806318160ddd146100e957806323b872dd14610100575b600080fd5b6100b0610182565b6040516100bd919061051e565b60405180910390f35b6100d96100d43660046104f5565b610210565b60405190151581526020016100bd565b6100f260035481565b6040519081526020016100bd565b6100d961010e3660046104ba565b610289565b6100f260025481565b6100f261012a366004610467565b60046020526000908152604090205481565b6100b0610346565b6100d96101523660046104f5565b610353565b6100f2610165366004610488565b600560209081526000928352604080842090915290825290205481565b6000805461018f906105a0565b80601f01602080910402602001604051908101604052809291908181526020018280546101bb906105a0565b80156102085780601f106101dd57610100808354040283529160200191610208565b820191906000526020600020905b8154815290600101906020018083116101eb57829003601f168201915b505050505081565b60006001600160a01b03831661022557600080fd5b3360008181526005602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350600192915050565b6001600160a01b0383166000908152600460205260408120548211156102ae57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156102de57600080fd5b6001600160a01b038416600090815260056020908152604080832033845290915290205461030d908390610589565b6001600160a01b038516600090815260056020908152604080832033845290915290205561033c848484610383565b5060019392505050565b6001805461018f906105a0565b3360009081526004602052604081205482111561036f57600080fd5b61037a338484610383565b50600192915050565b6001600160a01b03821661039657600080fd5b6001600160a01b0383166000908152600460205260409020546103ba908290610589565b6001600160a01b0380851660009081526004602052604080822093909355908416815220546103ea908290610571565b6001600160a01b0380841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061043e9085815260200190565b60405180910390a3505050565b80356001600160a01b038116811461046257600080fd5b919050565b600060208284031215610478578081fd5b6104818261044b565b9392505050565b6000806040838503121561049a578081fd5b6104a38361044b565b91506104b16020840161044b565b90509250929050565b6000806000606084860312156104ce578081fd5b6104d78461044b565b92506104e56020850161044b565b9150604084013590509250925092565b60008060408385031215610507578182fd5b6105108361044b565b946020939093013593505050565b6000602080835283518082850152825b8181101561054a5785810183015185820160400152820161052e565b8181111561055b5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610584576105846105db565b500190565b60008282101561059b5761059b6105db565b500390565b600181811c908216806105b457607f821691505b602082108114156105d557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200caac673496ed367180fc069e2fba77221d4e048be2f87b801c15b2f34fe2cc964736f6c63430008040033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(
      _name,
      _symbol,
      _totalSupply,
      overrides || {}
    ) as Promise<Token>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _totalSupply,
      overrides || {}
    );
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
